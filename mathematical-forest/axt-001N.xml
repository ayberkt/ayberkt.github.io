<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="jms-forest.xsl"?>
<fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1423</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>axt-001N</fr:addr><fr:route>axt-001N.xml</fr:route><fr:title>Partial application operation</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date><fr:authors><fr:author><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>
  Let
  <fr:ul><fr:li><fr:tex>\langle   {-}   \rangle</fr:tex> denote some computable coding operation <fr:tex>\mathsf {List}( \mathbb {N} )   \to   \mathbb {N}</fr:tex>, and</fr:li>
    <fr:li><fr:tex>\mu</fr:tex> denote the <fr:link
href="axt-001O.xml"
type="local"
addr="axt-001O">minimization operator</fr:link>.</fr:li></fr:ul></fr:p><fr:p>
  Given two functions <fr:tex>f, g :  \mathbb {N}   \to   \mathbb {N}</fr:tex>, the <fr:em>application</fr:em> of <fr:tex>f</fr:tex> to
  <fr:tex>g</fr:tex> is defined as follows:
  <fr:tex
display="block">f \  | \  g  \quad \vcentcolon \equiv \quad  f( \langle   g(0),  \ldots , g(r - 1)   \rangle )</fr:tex>
  where
  <fr:tex
display="block">r  \vcentcolon \equiv   \mu  r. \  f( \langle   g(0),  \ldots , g(r - 1)   \rangle ) &gt; 0</fr:tex></fr:p><fr:p>
  Defined in <fr:strong>Section 3.2.1</fr:strong> of <fr:link
href="longley-normann-hoc.xml"
type="local"
addr="longley-normann-hoc">Longley and Normann's
  book</fr:link>.
</fr:p></fr:mainmatter><fr:backmatter><fr:contributions></fr:contributions><fr:context><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1420</fr:anchor><fr:addr>axt-001P</fr:addr><fr:route>axt-001P.xml</fr:route><fr:title>Idea of Kleene's second model</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date><fr:authors><fr:author><fr:link
href="ayberkt.xml"
type="local"
addr="ayberkt">Ayberk Tosun</fr:link></fr:author><fr:contributor><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:contributor></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>
  The following is the summary of my understanding of <fr:link
href="john-longley.xml"
type="local"
addr="john-longley">Longley</fr:link>
  and <fr:link
href="dag-normann.xml"
type="local"
addr="dag-normann">Normann</fr:link>'s discussion in <fr:strong>Section 3.2.1</fr:strong> of their <fr:link
href="longley-normann-hoc.xml"
type="local"
addr="longley-normann-hoc">book
  on higher-order computability</fr:link>.
</fr:p><fr:p>
  Consider a function <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }  \to   \mathbb {N}</fr:tex>, that is computable in an
  intuitive sense.
</fr:p><fr:p>
  Given some <fr:tex>g  \in   \mathbb {N} ^{ \mathbb {N} }</fr:tex>, when the function <fr:tex>F</fr:tex> returns a result <fr:tex>F(g)  \in     \mathbb {N}</fr:tex>, it must do so after a finite examination of the input <fr:tex>g</fr:tex>. This is to
  say that there must be some <fr:tex>r  \in   \mathbb {N}</fr:tex> such that <fr:tex>F</fr:tex> "looks at" only the
  values <fr:tex>g(0),  \ldots , g(i_{r-1})</fr:tex>. So the result <fr:tex>F(g)</fr:tex> is <fr:em>determined
  solely</fr:em> using the information of the behaviour of <fr:tex>g</fr:tex> on the inputs <fr:tex>0,    \ldots , i_{r-1}</fr:tex>.
</fr:p><fr:p>
  Attempting to capture this idea of <fr:tex>F</fr:tex> being determined solely on a finite
  amount of information about the behaviour of <fr:tex>g</fr:tex>, we are naturally led to the
  notion of <fr:em>continuity</fr:em>: <fr:tex>F</fr:tex> cannot distinguish between <fr:tex>g</fr:tex> and any other
  function <fr:tex>g'  \in   \mathbb {N} ^{ \mathbb {N} }</fr:tex> that returns the same values as those of <fr:tex>g</fr:tex> on
  inputs <fr:tex>0,  \ldots , i_{r-1}</fr:tex>. In other words,
  <fr:tex
display="block">      \forall  g'  \in   \mathbb {N} ^{ \mathbb {N} } . \  \forall  k  \in   \{ 0,  \ldots , r-1 \} . \  g(i_k) = g'(i_k)  \rightarrow  F(g) = F(g').   </fr:tex></fr:p><fr:p>
  This is precisely the same thing as saying that <fr:tex>F</fr:tex> is <fr:em>continuous</fr:em> with
  respect to the standard Baire topology on <fr:tex>\mathbb {N} ^{ \mathbb {N} }</fr:tex> and the discrete topology
  <fr:tex>\mathbb {N}</fr:tex>. Continuity is merely a <fr:em>necessary condition</fr:em> for computability as
  there are many continuous functions <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }   \to   \mathbb {N}</fr:tex> that are <fr:strong>not</fr:strong>
  computable (in any sense). The idea, however, is that an abstract model of
  computation based only on this necessary condition will already capture some
  interesting aspects of computability.
</fr:p><fr:p>
  If <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }   \to   \mathbb {N}</fr:tex> is continuous in this sense, the function <fr:tex>F</fr:tex>
  can be <fr:strong>described completely</fr:strong> by whether the information
  <fr:tex
display="block">g(0) = m_0,  \ldots , g(r-1) = m-1</fr:tex>
  is sufficient to determine the value of <fr:tex>F(g)</fr:tex>, and if it is, what this
  value is. But this information that completely determines <fr:tex>F</fr:tex> is <fr:strong>finite</fr:strong>
  and itself be represented as a function <fr:tex>f_F  \in   \mathbb {N} ^{ \mathbb {N} }</fr:tex>, defined as
  <fr:tex
display="block">     f( \langle   m_0,  \ldots , m_{r-1}   \rangle )  \vcentcolon \equiv         \begin {cases}         m + 1 &amp;  \mathsf {if} \  g(0) = m_0  \wedge   \cdots   \wedge  g(r-1) = m_{r-1}  \rightarrow  F(g) = m \  \\          0     &amp;  \mathsf {if} \  g(0) = m_0  \wedge   \cdots   \wedge  g(r-1) = m_{r-1} \  \mathsf {does \  not \  suffice \  to \  determine} \  F(g)        \end {cases}   </fr:tex></fr:p><fr:p>
  The idea of the <fr:link
href="axt-001N.xml"
type="local"
addr="axt-001N">partial application operation</fr:link> is to take such an
  <fr:tex>f_F</fr:tex> encoding a function <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }   \to   \mathbb {N}</fr:tex> and to determine the value
  of <fr:tex>F(g)</fr:tex> using the continuity data encoded by <fr:tex>f_F</fr:tex>. This brings us to
  the definition of this application operation.
</fr:p><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1394</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>axt-001N</fr:addr><fr:route>axt-001N.xml</fr:route><fr:title>Partial application operation</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date><fr:authors><fr:author><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>
  Let
  <fr:ul><fr:li><fr:tex>\langle   {-}   \rangle</fr:tex> denote some computable coding operation <fr:tex>\mathsf {List}( \mathbb {N} )   \to   \mathbb {N}</fr:tex>, and</fr:li>
    <fr:li><fr:tex>\mu</fr:tex> denote the <fr:link
href="axt-001O.xml"
type="local"
addr="axt-001O">minimization operator</fr:link>.</fr:li></fr:ul></fr:p><fr:p>
  Given two functions <fr:tex>f, g :  \mathbb {N}   \to   \mathbb {N}</fr:tex>, the <fr:em>application</fr:em> of <fr:tex>f</fr:tex> to
  <fr:tex>g</fr:tex> is defined as follows:
  <fr:tex
display="block">f \  | \  g  \quad \vcentcolon \equiv \quad  f( \langle   g(0),  \ldots , g(r - 1)   \rangle )</fr:tex>
  where
  <fr:tex
display="block">r  \vcentcolon \equiv   \mu  r. \  f( \langle   g(0),  \ldots , g(r - 1)   \rangle ) &gt; 0</fr:tex></fr:p><fr:p>
  Defined in <fr:strong>Section 3.2.1</fr:strong> of <fr:link
href="longley-normann-hoc.xml"
type="local"
addr="longley-normann-hoc">Longley and Normann's
  book</fr:link>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
  So this operation gives us a function <fr:tex>{-} \  | \  {-} :  \mathbb {N} ^{ \mathbb {N} }   \times   \mathbb {N} ^{ \mathbb {N} }   \rightharpoonup     \mathbb {N} ^{ \mathbb {N} }</fr:tex></fr:p><fr:p>
  Kleene's second model (often denoted <fr:tex>\mathsf {K_2}</fr:tex>) is the structure <fr:tex>( \mathbb {N} ^{ \mathbb {N} } , {-} \  | \  {-})</fr:tex>.
</fr:p><fr:p>
  Kleene's <fr:link
href="axt-001M.xml"
type="local"
addr="axt-001M">countable functionals</fr:link> extend this idea from types of
  degree <fr:tex>2</fr:tex> to types of arbitrary degree i.e. higher types.
</fr:p></fr:mainmatter></fr:tree></fr:context><fr:related><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1419</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>axt-001O</fr:addr><fr:route>axt-001O.xml</fr:route><fr:title>Minimization operator</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date></fr:frontmatter><fr:mainmatter><fr:p>
  The <fr:em>minimization operation</fr:em> (sometimes called "unbounded search") is a
  partial function <fr:tex
display="block">\mu  : ( \mathbb {N}   \to   \mathsf {Bool} )  \rightharpoonup   \mathbb {N}</fr:tex> defined as
  <fr:tex
display="block">\mu (P)  \vcentcolon \equiv   \mathsf {search}  ( P ,  0 ) .</fr:tex>
  where the auxiliary <fr:tex>\mathsf {search}</fr:tex> function is defined as
  <fr:tex
display="block">      \mathsf {search}  ( P ,  n )   \vcentcolon \equiv         \begin {cases}         n                &amp;  \mathsf {if} \  P(n) \\           \mathsf {search}  ( P ,  n+1 )   &amp;  \mathsf {otherwise}        \end {cases}   </fr:tex></fr:p><fr:p>
  Given a predicate <fr:tex>P :  \mathbb {N}   \to   \mathsf {Bool}</fr:tex>, <fr:tex>\mu (P)</fr:tex> will return the smallest
  <fr:tex>n</fr:tex> satisfying <fr:tex>P</fr:tex>, if such an <fr:tex>n</fr:tex> exists, and will be undefined otherwise.
</fr:p></fr:mainmatter></fr:tree></fr:related><fr:backlinks><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1414</fr:anchor><fr:addr>axt-001P</fr:addr><fr:route>axt-001P.xml</fr:route><fr:title>Idea of Kleene's second model</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date><fr:authors><fr:author><fr:link
href="ayberkt.xml"
type="local"
addr="ayberkt">Ayberk Tosun</fr:link></fr:author><fr:contributor><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:contributor></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>
  The following is the summary of my understanding of <fr:link
href="john-longley.xml"
type="local"
addr="john-longley">Longley</fr:link>
  and <fr:link
href="dag-normann.xml"
type="local"
addr="dag-normann">Normann</fr:link>'s discussion in <fr:strong>Section 3.2.1</fr:strong> of their <fr:link
href="longley-normann-hoc.xml"
type="local"
addr="longley-normann-hoc">book
  on higher-order computability</fr:link>.
</fr:p><fr:p>
  Consider a function <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }  \to   \mathbb {N}</fr:tex>, that is computable in an
  intuitive sense.
</fr:p><fr:p>
  Given some <fr:tex>g  \in   \mathbb {N} ^{ \mathbb {N} }</fr:tex>, when the function <fr:tex>F</fr:tex> returns a result <fr:tex>F(g)  \in     \mathbb {N}</fr:tex>, it must do so after a finite examination of the input <fr:tex>g</fr:tex>. This is to
  say that there must be some <fr:tex>r  \in   \mathbb {N}</fr:tex> such that <fr:tex>F</fr:tex> "looks at" only the
  values <fr:tex>g(0),  \ldots , g(i_{r-1})</fr:tex>. So the result <fr:tex>F(g)</fr:tex> is <fr:em>determined
  solely</fr:em> using the information of the behaviour of <fr:tex>g</fr:tex> on the inputs <fr:tex>0,    \ldots , i_{r-1}</fr:tex>.
</fr:p><fr:p>
  Attempting to capture this idea of <fr:tex>F</fr:tex> being determined solely on a finite
  amount of information about the behaviour of <fr:tex>g</fr:tex>, we are naturally led to the
  notion of <fr:em>continuity</fr:em>: <fr:tex>F</fr:tex> cannot distinguish between <fr:tex>g</fr:tex> and any other
  function <fr:tex>g'  \in   \mathbb {N} ^{ \mathbb {N} }</fr:tex> that returns the same values as those of <fr:tex>g</fr:tex> on
  inputs <fr:tex>0,  \ldots , i_{r-1}</fr:tex>. In other words,
  <fr:tex
display="block">      \forall  g'  \in   \mathbb {N} ^{ \mathbb {N} } . \  \forall  k  \in   \{ 0,  \ldots , r-1 \} . \  g(i_k) = g'(i_k)  \rightarrow  F(g) = F(g').   </fr:tex></fr:p><fr:p>
  This is precisely the same thing as saying that <fr:tex>F</fr:tex> is <fr:em>continuous</fr:em> with
  respect to the standard Baire topology on <fr:tex>\mathbb {N} ^{ \mathbb {N} }</fr:tex> and the discrete topology
  <fr:tex>\mathbb {N}</fr:tex>. Continuity is merely a <fr:em>necessary condition</fr:em> for computability as
  there are many continuous functions <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }   \to   \mathbb {N}</fr:tex> that are <fr:strong>not</fr:strong>
  computable (in any sense). The idea, however, is that an abstract model of
  computation based only on this necessary condition will already capture some
  interesting aspects of computability.
</fr:p><fr:p>
  If <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }   \to   \mathbb {N}</fr:tex> is continuous in this sense, the function <fr:tex>F</fr:tex>
  can be <fr:strong>described completely</fr:strong> by whether the information
  <fr:tex
display="block">g(0) = m_0,  \ldots , g(r-1) = m-1</fr:tex>
  is sufficient to determine the value of <fr:tex>F(g)</fr:tex>, and if it is, what this
  value is. But this information that completely determines <fr:tex>F</fr:tex> is <fr:strong>finite</fr:strong>
  and itself be represented as a function <fr:tex>f_F  \in   \mathbb {N} ^{ \mathbb {N} }</fr:tex>, defined as
  <fr:tex
display="block">     f( \langle   m_0,  \ldots , m_{r-1}   \rangle )  \vcentcolon \equiv         \begin {cases}         m + 1 &amp;  \mathsf {if} \  g(0) = m_0  \wedge   \cdots   \wedge  g(r-1) = m_{r-1}  \rightarrow  F(g) = m \  \\          0     &amp;  \mathsf {if} \  g(0) = m_0  \wedge   \cdots   \wedge  g(r-1) = m_{r-1} \  \mathsf {does \  not \  suffice \  to \  determine} \  F(g)        \end {cases}   </fr:tex></fr:p><fr:p>
  The idea of the <fr:link
href="axt-001N.xml"
type="local"
addr="axt-001N">partial application operation</fr:link> is to take such an
  <fr:tex>f_F</fr:tex> encoding a function <fr:tex>F :  \mathbb {N} ^{ \mathbb {N} }   \to   \mathbb {N}</fr:tex> and to determine the value
  of <fr:tex>F(g)</fr:tex> using the continuity data encoded by <fr:tex>f_F</fr:tex>. This brings us to
  the definition of this application operation.
</fr:p><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="true"
show-heading="true"
show-metadata="false"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1394</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>axt-001N</fr:addr><fr:route>axt-001N.xml</fr:route><fr:title>Partial application operation</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date><fr:authors><fr:author><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:author></fr:authors></fr:frontmatter><fr:mainmatter><fr:p>
  Let
  <fr:ul><fr:li><fr:tex>\langle   {-}   \rangle</fr:tex> denote some computable coding operation <fr:tex>\mathsf {List}( \mathbb {N} )   \to   \mathbb {N}</fr:tex>, and</fr:li>
    <fr:li><fr:tex>\mu</fr:tex> denote the <fr:link
href="axt-001O.xml"
type="local"
addr="axt-001O">minimization operator</fr:link>.</fr:li></fr:ul></fr:p><fr:p>
  Given two functions <fr:tex>f, g :  \mathbb {N}   \to   \mathbb {N}</fr:tex>, the <fr:em>application</fr:em> of <fr:tex>f</fr:tex> to
  <fr:tex>g</fr:tex> is defined as follows:
  <fr:tex
display="block">f \  | \  g  \quad \vcentcolon \equiv \quad  f( \langle   g(0),  \ldots , g(r - 1)   \rangle )</fr:tex>
  where
  <fr:tex
display="block">r  \vcentcolon \equiv   \mu  r. \  f( \langle   g(0),  \ldots , g(r - 1)   \rangle ) &gt; 0</fr:tex></fr:p><fr:p>
  Defined in <fr:strong>Section 3.2.1</fr:strong> of <fr:link
href="longley-normann-hoc.xml"
type="local"
addr="longley-normann-hoc">Longley and Normann's
  book</fr:link>.
</fr:p></fr:mainmatter></fr:tree><fr:p>
  So this operation gives us a function <fr:tex>{-} \  | \  {-} :  \mathbb {N} ^{ \mathbb {N} }   \times   \mathbb {N} ^{ \mathbb {N} }   \rightharpoonup     \mathbb {N} ^{ \mathbb {N} }</fr:tex></fr:p><fr:p>
  Kleene's second model (often denoted <fr:tex>\mathsf {K_2}</fr:tex>) is the structure <fr:tex>( \mathbb {N} ^{ \mathbb {N} } , {-} \  | \  {-})</fr:tex>.
</fr:p><fr:p>
  Kleene's <fr:link
href="axt-001M.xml"
type="local"
addr="axt-001M">countable functionals</fr:link> extend this idea from types of
  degree <fr:tex>2</fr:tex> to types of arbitrary degree i.e. higher types.
</fr:p></fr:mainmatter></fr:tree><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1417</fr:anchor><fr:taxon>Definition</fr:taxon><fr:addr>axt-001M</fr:addr><fr:route>axt-001M.xml</fr:route><fr:title>Kleene's countable functionals</fr:title><fr:date><fr:year>2023</fr:year><fr:month>10</fr:month><fr:day>25</fr:day></fr:date><fr:authors><fr:author><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:author></fr:authors><fr:meta
name="source"><fr:strong>Defn. 3.13</fr:strong> of <fr:link
href="longley-notions-I.xml"
type="local"
addr="longley-notions-I">[Longley]</fr:link></fr:meta></fr:frontmatter><fr:mainmatter><fr:p>
  The class <fr:tex>\mathsf {C} _n</fr:tex> of <fr:em>countable functionals at level <fr:tex>n</fr:tex></fr:em> is defined by
  induction on <fr:tex>n</fr:tex>, together with a notion of <fr:em>associate</fr:em> for each <fr:tex>\mathsf {C} _n</fr:tex>.
  <fr:ul><fr:li><fr:tex>\mathsf {C} _0  \vcentcolon \equiv   \mathbb {N}</fr:tex>.</fr:li>
    <fr:li><fr:tex>\mathsf {C} _1  \vcentcolon \equiv   \mathbb {N} ^{ \mathbb {N} }</fr:tex>.</fr:li>
    <fr:li>Each <fr:tex>f  \in   \mathsf {C} _1</fr:tex> is taken to be an associate for itself.</fr:li>
    <fr:li>For <fr:tex>n  \ge  1</fr:tex>, 
      <fr:ul><fr:li>
          a function <fr:tex>f  \in   \mathsf {C} _1</fr:tex> is taken to be associate for the function
          <fr:tex>F :  \mathsf {C} _n  \to   \mathbb {N}</fr:tex> if for every <fr:tex>G  \in   \mathsf {C} _n</fr:tex> and for every
          associate <fr:tex>g</fr:tex> for <fr:tex>G</fr:tex>, <fr:tex>f \  | \  g = F(G)</fr:tex>, where
          <fr:tex>{-} \  | \  {-}</fr:tex> denotes the <fr:link
href="axt-001N.xml"
type="local"
addr="axt-001N">partial application operation</fr:link>.
        </fr:li>
        <fr:li><fr:tex>\mathsf {C} _{n + 1}</fr:tex> is taken to be the set of functions <fr:tex>\mathsf {C} _n  \to   \mathbb {N}</fr:tex>
          that have associates.
        </fr:li></fr:ul></fr:li></fr:ul></fr:p></fr:mainmatter></fr:tree></fr:backlinks><fr:references><fr:tree
xmlns:fr="http://www.jonmsterling.com/jms-005P.xml"
toc="true"
numbered="false"
show-heading="true"
show-metadata="true"
expanded="true"
root="false"><fr:frontmatter><fr:anchor>1411</fr:anchor><fr:taxon>Reference</fr:taxon><fr:addr>longley-normann-hoc</fr:addr><fr:route>longley-normann-hoc.xml</fr:route><fr:title>Higher-Order Computability</fr:title><fr:date><fr:year>2015</fr:year></fr:date><fr:authors><fr:author><fr:link
href="john-longley.xml"
type="local"
addr="john-longley">John R. Longley</fr:link></fr:author><fr:author><fr:link
href="dag-normann.xml"
type="local"
addr="dag-normann">Dag Normann</fr:link></fr:author></fr:authors><fr:meta
name="bibtex">@book{longley-normann-hoc,
  title     = {Higher-Order Computability},
  author    = {Longley, John R. and Normann, Dag},
  year      = 2015,
  publisher = {Springer},
  series    = {Theory and Applications of Computability},
  doi       = {10.1007/978-3-662-47992-6},
}</fr:meta></fr:frontmatter><fr:mainmatter></fr:mainmatter></fr:tree></fr:references></fr:backmatter></fr:tree>