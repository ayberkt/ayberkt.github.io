<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="forest.xsl"?>
<tree expanded="true" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>290</anchor>  <taxon>Definition</taxon> <addr>axt-001M</addr>  <route>axt-001M.xml</route> <date><year>2023</year> <month>10</month> <day>25</day></date> <authors><author><link href="john-longley.xml" type="local">John R. Longley</link></author> </authors> <title>Kleene's countable functionals</title> </frontmatter> <mainmatter><p>  The class <tex>\mathsf{C} _n</tex> of <em>countable functionals at level <tex>n</tex></em> is defined by
  induction on <tex>n</tex>, together with a notion of <em>associate</em> for each <tex>\mathsf{C} _n</tex>.
  <ul>    <li><tex>\mathsf{C} _0  \vcentcolon \equiv   \mathbb{N}</tex>.</li>    <li><tex>\mathsf{C} _1  \vcentcolon \equiv   \mathbb{N} ^{ \mathbb{N} }</tex>.</li>    <li>Each <tex>f  \in   \mathsf{C} _1</tex> is taken to be an associate for itself.</li>    <li>For <tex>n  \ge  1</tex>, 
      <ul>        <li>          a function <tex>f  \in   \mathsf{C} _1</tex> is taken to be associate for the function
          <tex>F :  \mathsf{C} _n  \to   \mathbb{N}</tex> if for every <tex>G  \in   \mathsf{C} _n</tex> and for every
          associate <tex>g</tex> for <tex>G</tex>, <tex>f \  | \  g = F(G)</tex>, where
          <tex>{-} \  | \ {-}</tex> denotes the <link href="axt-001N.xml" type="local" title="Partial application operation">partial application operation</link>.
        </li>        <li>          <tex>\mathsf{C} _{n + 1}</tex> is taken to be the set of functions <tex>\mathsf{C} _n  \to   \mathbb{N}</tex>          that have associates.
        </li>      </ul>    </li>  </ul></p><p>  <b>Definition 3.13</b> from <link href="john-longley.xml" type="local" title="John R. Longley">Longley</link>'s <link href="longley-notions-I.xml" type="local" title="Notions of computability at higher types I">Notions of computability at higher types I</link>.
</p></mainmatter> <backmatter><contributions/> <context/> <related><tree expanded="false" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>291</anchor>  <taxon>Definition</taxon> <addr>axt-001N</addr>  <route>axt-001N.xml</route> <date><year>2023</year> <month>10</month> <day>25</day></date> <authors><author><link href="john-longley.xml" type="local">John R. Longley</link></author> </authors> <title>Partial application operation</title> </frontmatter> <mainmatter><p>  Let
  <ul>    <li><tex>\langle   {-}   \rangle</tex> denote some computable coding operation <tex>\mathsf{List} ( \mathbb{N} )   \to   \mathbb{N}</tex>, and</li>    <li><tex>\mu</tex> denote the <link href="axt-001O.xml" type="local" title="Minimization operator">minimization operator</link>.</li>  </ul></p><p>  Given two functions <tex>f, g :  \mathbb{N}   \to   \mathbb{N}</tex>, the <em>application</em> of <tex>f</tex> to
  <tex>g</tex> is defined as follows:
  <tex display="block">f \  | \  g  \quad \vcentcolon \equiv \quad  f( \langle   g(0),  \ldots , g(r - 1)   \rangle )</tex>  where
  <tex display="block">r  \vcentcolon \equiv   \mu  r. \  f( \langle   g(0),  \ldots , g(r - 1)   \rangle ) &gt; 0</tex></p><p>  Defined in <b>Section 3.2.1</b> of <link href="longley-normann-hoc.xml" type="local" title="Higher-Order Computability">Longley and Normann's
  book</link>.
</p></mainmatter> </tree><tree expanded="false" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>292</anchor>  <taxon>Person</taxon> <addr>john-longley</addr>  <route>john-longley.xml</route>   <title>John R. Longley</title> <meta name="external">https://homepages.inf.ed.ac.uk/jrl/</meta></frontmatter> <mainmatter/> </tree></related> <backlinks><tree expanded="false" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>293</anchor>   <addr>axt-001P</addr>  <route>axt-001P.xml</route> <date><year>2023</year> <month>10</month> <day>25</day></date> <authors><author><link href="ayberkt.xml" type="local">Ayberk Tosun</link></author> <contributor><link href="john-longley.xml" type="local">John R. Longley</link></contributor></authors> <title>Idea of Kleene's second model</title> </frontmatter> <mainmatter><p>  The following is the summary of my understanding of <link href="john-longley.xml" type="local" title="John R. Longley">Longley</link>  and <link href="dag-normann.xml" type="local" title="Dag Normann">Normann</link>'s discussion in <b>Section 3.2.1</b> of their <link href="longley-normann-hoc.xml" type="local" title="Higher-Order Computability">book
  on higher-order computability</link>.
</p><p>  Consider a function <tex>F :  \mathbb{N} ^{ \mathbb{N} }  \to   \mathbb{N}</tex>, that is computable in an
  intuitive sense.
</p><p>  Given some <tex>g  \in   \mathbb{N} ^{ \mathbb{N} }</tex>, when the function <tex>F</tex> returns a result <tex>F(g)  \in    \mathbb{N}</tex>, it must do so after a finite examination of the input <tex>g</tex>. This is to
  say that there must be some <tex>r  \in   \mathbb{N}</tex> such that <tex>F</tex> &quot;looks at&quot; only the
  values <tex>g(0),  \ldots , g(i_{r-1})</tex>. So the result <tex>F(g)</tex> is <em>determined
  solely</em> using the information of the behaviour of <tex>g</tex> on the inputs <tex>0,
   \ldots , i_{r-1}</tex>.
</p><p>  Attempting to capture this idea of <tex>F</tex> being determined solely on a finite
  amount of information about the behaviour of <tex>g</tex>, we are naturally led to the
  notion of <em>continuity</em>: <tex>F</tex> cannot distinguish between <tex>g</tex> and any other
  function <tex>g'  \in   \mathbb{N} ^{ \mathbb{N} }</tex> that returns the same values as those of <tex>g</tex> on
  inputs <tex>0,  \ldots , i_{r-1}</tex>. In other words,
  <tex display="block">     \forall  g'  \in   \mathbb{N} ^{ \mathbb{N} } . \  \forall  k  \in   \{ 0,  \ldots , r-1 \} . \  g(i_k) = g'(i_k)  \rightarrow  F(g) = F(g').
  </tex></p><p>  This is precisely the same thing as saying that <tex>F</tex> is <em>continuous</em> with
  respect to the standard Baire topology on <tex>\mathbb{N} ^{ \mathbb{N} }</tex> and the discrete topology
  <tex>\mathbb{N}</tex>. Continuity is merely a <em>necessary condition</em> for computability as
  there are many continuous functions <tex>F :  \mathbb{N} ^{ \mathbb{N} }   \to   \mathbb{N}</tex> that are <b>not</b>  computable (in any sense). The idea, however, is that an abstract model of
  computation based only on this necessary condition will already capture some
  interesting aspects of computability.
</p><p>  If <tex>F :  \mathbb{N} ^{ \mathbb{N} }   \to   \mathbb{N}</tex> is continuous in this sense, the function <tex>F</tex>  can be <b>described completely</b> by whether the information
  <tex display="block">g(0) = m_0,  \ldots , g(r-1) = m-1</tex>  is sufficient to determine the value of <tex>F(g)</tex>, and if it is, what this
  value is. But this information that completely determines <tex>F</tex> is <b>finite</b>  and itself be represented as a function <tex>f_F  \in   \mathbb{N} ^{ \mathbb{N} }</tex>, defined as
  <tex display="block">    f( \langle   m_0,  \ldots , m_{r-1}   \rangle )  \vcentcolon \equiv        \begin{cases}         m + 1 &amp;  \mathsf{if} \  g(0) = m_0  \wedge   \cdots   \wedge  g(r-1) = m_{r-1}  \rightarrow  F(g) = m \  \\         0     &amp;  \mathsf{if} \  g(0) = m_0  \wedge   \cdots   \wedge  g(r-1) = m_{r-1} \  \mathsf{does \  not \  suffice \  to \  determine} \  F(g)       \end{cases}   </tex></p><p>  The idea of the <link href="axt-001N.xml" type="local" title="Partial application operation">partial application operation</link> is to take such an
  <tex>f_F</tex> encoding a function <tex>F :  \mathbb{N} ^{ \mathbb{N} }   \to   \mathbb{N}</tex> and to determine the value
  of <tex>F(g)</tex> using the continuity data encoded by <tex>f_F</tex>. This brings us to
  the definition of this application operation.
</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" root="false"><frontmatter><trail><crumb>1</crumb></trail> <anchor>294</anchor>  <taxon>Definition</taxon> <addr>axt-001N</addr>  <route>axt-001N.xml</route> <date><year>2023</year> <month>10</month> <day>25</day></date> <authors><author><link href="john-longley.xml" type="local">John R. Longley</link></author> </authors> <title>Partial application operation</title> </frontmatter> <mainmatter><p>  Let
  <ul>    <li><tex>\langle   {-}   \rangle</tex> denote some computable coding operation <tex>\mathsf{List} ( \mathbb{N} )   \to   \mathbb{N}</tex>, and</li>    <li><tex>\mu</tex> denote the <link href="axt-001O.xml" type="local" title="Minimization operator">minimization operator</link>.</li>  </ul></p><p>  Given two functions <tex>f, g :  \mathbb{N}   \to   \mathbb{N}</tex>, the <em>application</em> of <tex>f</tex> to
  <tex>g</tex> is defined as follows:
  <tex display="block">f \  | \  g  \quad \vcentcolon \equiv \quad  f( \langle   g(0),  \ldots , g(r - 1)   \rangle )</tex>  where
  <tex display="block">r  \vcentcolon \equiv   \mu  r. \  f( \langle   g(0),  \ldots , g(r - 1)   \rangle ) &gt; 0</tex></p><p>  Defined in <b>Section 3.2.1</b> of <link href="longley-normann-hoc.xml" type="local" title="Higher-Order Computability">Longley and Normann's
  book</link>.
</p></mainmatter> </tree><p>  So this operation gives us a function <tex>{-} \  | \ {-}  :  \mathbb{N} ^{ \mathbb{N} }   \times   \mathbb{N} ^{ \mathbb{N} }   \rightharpoonup    \mathbb{N} ^{ \mathbb{N} }</tex></p><p>  Kleene's second model (often denoted <tex>\mathsf{K_2}</tex>) is the structure <tex>( \mathbb{N} ^{ \mathbb{N} } , {-} \  | \ {-} )</tex>.
</p><p>  Kleene's <link href="axt-001M.xml" type="local" title="Kleene's countable functionals">countable functionals</link> extend this idea from types of
  degree <tex>2</tex> to types of arbitrary degree i.e. higher types.
</p></mainmatter> </tree></backlinks> <references><tree expanded="false" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>295</anchor>  <taxon>Reference</taxon> <addr>longley-notions-I</addr>  <route>longley-notions-I.xml</route> <date><year>2017</year>  </date> <authors><author><link href="john-longley.xml" type="local">John R. Longley</link></author> </authors> <title>Notions of computability at higher types I</title> <meta name="bibtex">@incollection{longley-notions-I,
  title        = {Notions of computability at higher types I},
  author       = {Longley, John R.},
  year         = {2017},
  booktitle    = {Logic Colloquium 2000},
  copyright    = {Cambridge University Press 2016},
  isbn         = {9781316755884},
  pages        = {32-142},
  publisher    = {Cambridge University Press},
}
</meta></frontmatter> <mainmatter/> </tree></references></backmatter></tree>